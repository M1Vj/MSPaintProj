<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Background color -->
    <SolidColorBrush x:Key="BackgroundColor">#F2F0F8</SolidColorBrush>
    <SolidColorBrush x:Key="MenuBackgroundColor">#F6F8FE</SolidColorBrush>
    <SolidColorBrush x:Key="TextColor">Gray</SolidColorBrush>
    <SolidColorBrush x:Key="MouseHover">#EBEBEB</SolidColorBrush>
    <SolidColorBrush x:Key="AccentColorBrush" Color="#FF007ACC"/>
    <SolidColorBrush x:Key="AccentHoverBrush" Color="#FF005A9E"/>


    <!-- InkCanvas -->
    <Style x:Key="InkCanvasStyle" TargetType="InkCanvas">
        <Setter Property="Background" Value="White"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="EditingMode" Value="Ink"/>
        <Setter Property="Strokes" Value="{Binding Strokes}"/>
        <Setter Property="DefaultDrawingAttributes">
            <Setter.Value>
                <DrawingAttributes Width="2" Height="2" Color="Black"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Text Button Style -->
    <Style x:Key="TextButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2.5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                    Width="{TemplateBinding Width}"
                    Height="{TemplateBinding Height}"
                    CornerRadius="5"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextElement.FontSize="{TemplateBinding FontSize}"
                            TextElement.FontFamily="{TemplateBinding FontFamily}"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            RecognizesAccessKey="True">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseHover}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Gray"/>
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Toggle Button Style for Tool Buttons -->
    <Style x:Key="SymbolToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#212125"/>
        <Setter Property="FontFamily" Value="Segoe Fluent Icons"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5" Padding="{TemplateBinding Padding}" >
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding Margin}"        
                            TextElement.FontSize="{TemplateBinding FontSize}"
                            TextElement.FontFamily="{TemplateBinding FontFamily}"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            RecognizesAccessKey="True"
                            TextElement.FontWeight="{TemplateBinding FontWeight}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Purple"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseHover}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Text Style -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Cursor" Value="Arrow"/>
    </Style>

    <!-- Symbol Button Style -->
    <Style x:Key="SymbolButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#212125"/>
        <Setter Property="FontFamily" Value="Segoe Fluent Icons"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5" Padding="{TemplateBinding Padding}" >
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding Margin}"        
                            TextElement.FontSize="{TemplateBinding FontSize}"
                            TextElement.FontFamily="{TemplateBinding FontFamily}"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            RecognizesAccessKey="True"
                            TextElement.FontWeight="{TemplateBinding FontWeight}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#EBEBEB"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#CFCFCF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Colors Button Style -->
    <Style x:Key="ColorButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Panel.ZIndex" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="circle"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        CornerRadius="25"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                TextElement.FontSize="{TemplateBinding FontSize}"
                                TextElement.FontFamily="{TemplateBinding FontFamily}"
                                TextElement.Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="True"
                                TextElement.FontWeight="{TemplateBinding FontWeight}">
                                <ContentPresenter.Effect>
                                    <DropShadowEffect Color="Gray" BlurRadius="1" ShadowDepth="0" Opacity="5"/>
                                </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="circle" Property="Background" Value="{StaticResource MouseHover}"/>
                            <Setter TargetName="circle" Property="BorderThickness" Value="2"/>
                            <Setter Property="Panel.ZIndex" Value="100"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Panel.ZIndex" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="circle" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InvisibleRepeatButton" TargetType="RepeatButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="ModernScrollBarThumb" TargetType="Thumb">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border CornerRadius="5"
                        Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ScrollBar">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid Background="Transparent">
                        <Track x:Name="PART_Track"
                 Orientation="{TemplateBinding Orientation}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource InvisibleRepeatButton}"
                            Command="ScrollBar.LineUpCommand"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb"
                     Background="{StaticResource AccentColorBrush}"/>
                            </Track.Thumb>

                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource InvisibleRepeatButton}"
                            Command="ScrollBar.LineDownCommand"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="Thumb" Property="Height" Value="8"/>
                            <Setter TargetName="Thumb" Property="Width"  Value="40"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Thumb" Property="Width"  Value="8"/>
                            <Setter TargetName="Thumb" Property="Height" Value="40"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Thumb"
                    Property="Background"
                    Value="{StaticResource AccentHoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for Vertical Slider -->
    <Style x:Key="ModernSliderStyle" TargetType="Slider">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="Border" TargetType="Slider">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Border x:Name="TrackBackground"
                            Grid.Row="1" Grid.Column="1"
                            Margin="0"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Center"
                            Width="3"
                            CornerRadius="1.5"
                            Background="{TemplateBinding Background}"
                            IsHitTestVisible="False"/>

                            <Track x:Name="PART_Track"
                               Grid.Row="1" Grid.Column="1"
                               Minimum="{TemplateBinding Minimum}"
                               Maximum="{TemplateBinding Maximum}"
                               Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}"
                               IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                               Orientation="Vertical">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{x:Null}" Height="0"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                       Height="12" Width="12"
                                       Background="{TemplateBinding Foreground}"
                                       BorderBrush="Gray"
                                       BorderThickness="1"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                        <Thumb.Style>
                                            <Style TargetType="Thumb">
                                                <Setter Property="BorderBrush" Value="Gray"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource AccentHoverBrush}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{x:Null}" Height="0"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ResizeThumbStyle" TargetType="Thumb">
        <Setter Property="Width"  Value="6"/>
        <Setter Property="Height" Value="6"/>
        <Setter Property="Background"     Value="Transparent"/>
        <Setter Property="Foreground"    Value="Transparent"/>
        <Setter Property="BorderBrush"    Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- Menu Style -->
    <Style x:Key="ModernMenuStyle" TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- MenuItem Style -->
    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#212125"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="InputGestureText"/>
                                    <ColumnDefinition Width="14"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="Icon" Grid.Column="0" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="20,0,4,0" VerticalAlignment="Center" Foreground="{StaticResource TextColor}"/>
                                <Path x:Name="Arrow" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="4,0,0,0" Data="M 0 0 L 4 4 L 0 8 Z" Fill="{TemplateBinding Foreground}" Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsSubmenuOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade">
                            <Border x:Name="SubMenuBorder"
                                    Background="{StaticResource MenuBackgroundColor}"
                                    BorderBrush="#CCC"
                                    BorderThickness="1">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Highlight Trigger (for SubmenuItem, TopLevelItem) -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="Role" Value="SubmenuItem"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentColorBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="InputGestureText" Property="Foreground" Value="White"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="White"/>
                        </MultiTrigger>
                         <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="Role" Value="TopLevelItem"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentColorBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="InputGestureText" Property="Foreground" Value="White"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="White"/>
                        </MultiTrigger>

                        <!-- Highlight Trigger (for TopLevelHeader - File, Edit, View) -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                             <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseHover}"/>
                             <Setter Property="Foreground" Value="#212125"/>
                        </MultiTrigger>
                        <MultiTrigger>
                             <MultiTrigger.Conditions>
                                <Condition Property="IsSubmenuOpen" Value="True"/>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                            </MultiTrigger.Conditions>
                             <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseHover}"/>
                             <Setter Property="Foreground" Value="#212125"/>
                        </MultiTrigger>

                        <!-- Disabled Trigger -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource TextColor}"/> <!-- Use standard disabled text color -->
                            <Setter TargetName="InputGestureText" Property="Foreground" Value="{StaticResource TextColor}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource TextColor}"/>
                        </Trigger>

                        <!-- Trigger to show arrow for submenu headers -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <!-- Trigger for TopLevelHeader (adjust padding, etc.) -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                             <Setter Property="Padding" Value="0,4"/>
                             <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                             <Setter Property="Foreground" Value="#212125"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Add specific overrides for TopLevelHeader if needed, outside the template -->
        <Style.Triggers>
             <Trigger Property="Role" Value="TopLevelHeader">
                 <Setter Property="Padding" Value="0,4"/>
                 <Setter Property="Background" Value="Transparent"/>
                 <Setter Property="Foreground" Value="Black"/>
                 <Setter Property="BorderThickness" Value="0"/>
                 <Setter Property="HorizontalContentAlignment" Value="Center"/>
             </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Add this Separator style after your MenuItem style -->
    <Style TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Background" Value="#E0E0E0"/>
        <Setter Property="Margin" Value="4,4,4,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}"
                               Margin="{TemplateBinding Margin}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
